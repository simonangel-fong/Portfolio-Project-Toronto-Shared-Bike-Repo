name: "GitHub Actions Pipeline: Update Staging Environment"

on:
  push:
    branches:
      - master

env:
  TF_VERSION: 1.9.8
  TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
  TF_WORKING_DIR: staging
  TF_VAR_aws_region: ${{ vars.AWS_REGION }}
#   TF_VAR_cloudflare_api_token: ${{secrets.CF_API_TOKEN}}
#   TF_VAR_cloudflare_zone_id: ${{secrets.CF_ZONE}}
#   K6_DEV_DNS: ${{ vars.K6_DEV_DNS }}
#   K6_PROD_DNS: ${{ vars.K6_PROD_DNS }}

permissions:
  id-token: write
  contents: read

jobs:
  staging_terraform_plan:
    name: Staging - Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: ${{ env.TF_VAR_aws_region }}

      - name: Cache .terraform
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ${{ env.TF_WORKING_DIR }}/.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-

      - name: Terraform init (S3 backend)
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY_DEV }}" \
            -backend-config="encrypt=true"

      - name: Terraform fmt
        run: terraform fmt -check -recursive -no-color

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        run: terraform plan -out=tfplan -input=false -no-color

      - name: Save dev plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}/tfplan

#   dev_terraform_apply:
#     name: Dev-Terraform-Apply
#     needs: dev_terraform_val_plan
#     if: github.ref == 'refs/heads/master'
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ${{ env.TF_DEV_WORKING_DIR }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: ${{ env.TF_VERSION }}

#       - name: Configure AWS credentials (OIDC)
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
#           aws-region: ${{ env.TF_VAR_aws_region }}

#       - name: Download plan artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: dev-tfplan
#           path: ${{ env.TF_DEV_WORKING_DIR }}

#       - name: Terraform init (S3 backend)
#         run: |
#           terraform init -reconfigure -input=false \
#             -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
#             -backend-config="region=${{ vars.AWS_REGION }}" \
#             -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY_DEV }}" \
#             -backend-config="encrypt=true"

#       - name: Terraform apply
#         run: terraform apply -auto-approve -input=false -no-color tfplan

#       # Notify: send email
#       - name: Send email notification on success
#         if: success()
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 587
#           # secure: true
#           username: ${{ secrets.EMAIL_USERNAME }}
#           password: ${{ secrets.EMAIL_PASSWORD }}
#           subject: "✅ Project - Toronto shared bike(Dev): Terraform Apply Success"
#           to: ${{ secrets.EMAIL_USERNAME }}
#           from: ${{ secrets.EMAIL_USERNAME }}
#           html_body: |
#             <h2>GitHub Actions CI/CD Notification</h2>
#             <p><b>Project</b>: Toronto shared bike</p>
#             <p><b>Repository</b>: ${{ github.repository }}</p>
#             <p><b>Action</b>: Infrastructures update</p>
#             <p><b>Env</b>: DEV</p>
#             <p><b>Status</b>: success</p>
#             <p>Branch: <b>${{ github.base_ref }}</b></p>
#             <p>Workflow: <b>${{ github.workflow }}</b></p>
#             <p>Commit: <b>${{ github.sha }}</b></p>
#             <p><a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a></p>

#       - name: Send email notification on failure
#         if: failure()
#         uses: dawidd6/action-send-mail@v3
#         with:
#           server_address: smtp.gmail.com
#           server_port: 587
#           # secure: true
#           username: ${{ secrets.EMAIL_USERNAME }}
#           password: ${{ secrets.EMAIL_PASSWORD }}
#           subject: "❌ Project - Toronto shared bike(Dev): Terraform Apply Failure"
#           to: ${{ secrets.EMAIL_USERNAME }}
#           from: ${{ secrets.EMAIL_USERNAME }}
#           html_body: |
#             <h2>GitHub Actions CI/CD Notification</h2>
#             <p><b>Project</b>: Toronto shared bike</p>
#             <p><b>Repository</b>: ${{ github.repository }}</p>
#             <p><b>Action</b>: Infrastructures update</p>
#             <p><b>Env</b>: DEV</p>
#             <p><b>Status</b>: fail</p>
#             <p>Branch: <b>${{ github.base_ref }}</b></p>
#             <p>Workflow: <b>${{ github.workflow }}</b></p>
#             <p>Commit: <b>${{ github.sha }}</b></p>
#             <p><a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a></p>
