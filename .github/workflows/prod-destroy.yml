name: prod-destroy

on:
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

concurrency:
  group: prod-destroy-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true # Cancel older runs

jobs:
  destroy_prod:
    name: Destroy Prod
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    environment: Prod
    timeout-minutes: 60
    env:
      TF_PLUGIN_CACHE_DIR: /home/runner/.terraform.d/plugin-cache
      TF_VAR_project: ${{ vars.TF_VAR_PROJECT }}
      TF_VAR_app: ${{ vars.TF_VAR_APP }}
      TF_VAR_env: ${{ vars.TF_VAR_ENV }}
      TF_VAR_dns_domain: ${{ vars.TF_VAR_DNS_DOMAIN }}
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
      TF_VAR_cloudflare_api_token: ${{secrets.CF_API_TOKEN}}
      TF_VAR_cloudflare_zone_id: ${{secrets.CF_ZONE}}
    defaults:
      run:
        working-directory: ${{ vars.DIR_AWS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TF_AWS_ROLE }}
          aws-region: ${{ vars.TF_VAR_aws_region }}

      - name: Configure Terraform plugin cache
        run: |
          mkdir -pv ~/.terraform.d/plugin-cache
          echo 'plugin_cache_dir = "~/.terraform.d/plugin-cache"' > ~/.terraformrc

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ vars.TF_VERSION }}

      - name: Terraform init - S3 backend
        run: |
          terraform init -reconfigure -input=false \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY }}/${{ vars.TF_VAR_env }}/terraform.tfstate" \
            -backend-config="encrypt=true"

      - name: Terraform Validate
        run: |
          terraform fmt -check -recursive -no-color
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -input=false -no-color -destroy

      - name: Terraform Apply - Destroy Prod
        run: terraform apply -auto-approve -no-color tfplan
