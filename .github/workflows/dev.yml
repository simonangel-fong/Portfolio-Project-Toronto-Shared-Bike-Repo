name: dev-ci

on:
  workflow_dispatch:
  push:
    branches:
      - "feature/**"
    paths:
      - "src/**"
      - ".github/workflows/dev.yml"
  pull_request:
    branches: ["staging"]
    paths:
      - "src/**"

permissions:
  contents: read

concurrency:
  group: dev-ci-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_name || github.run_id }}
  cancel-in-progress: true # Cancel older runs

jobs:
  lambda_unit_test:
    name: Lambda Unit Test
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirement*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pwd
          ls
          pip install -r requirement.txt

      - name: Run unit tests
        run: |
          echo "Running Lambda unit tests…"
          pwd
          ls
          pytest testing/unit/test_bike.py

  terraform_validate:
    name: Terraform Validate
    needs: lambda_unit_test
    runs-on: ubuntu-latest
    environment: Dev
    env:
      TF_PLUGIN_CACHE_DIR: /home/runner/.terraform.d/plugin-cache
    defaults:
      run:
        working-directory: ${{ vars.DIR_AWS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: Configure plugin cache dir
        run: |
          mkdir -pv /home/runner/.terraform.d/plugin-cache /home/runner/.tflint.d/plugins
          echo 'plugin_cache_dir = "/home/runner/.terraform.d/plugin-cache"' > /home/runner/.terraformrc

      - name: Cache Terraform plugin dir
        uses: actions/cache@v4
        with:
          path: /home/runner/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ vars.TF_VERSION }}

      - name: Terraform init (no backend)
        run: terraform init -backend=false -no-color

      - name: Terraform fmt
        run: terraform fmt -check -recursive -no-color

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.53.0

      - name: Cache TFLint plugins
        uses: actions/cache@v4
        with:
          path: /home/runner/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('**/.tflint.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tflint-

      - name: TFLint
        run: |
          tflint --init
          tflint -f compact

      - name: Summarize results
        id: summary
        if: always()
        run: |
          {
            echo "## Dev CI Summary"
            echo ""
            echo "- **Project**: ${{ vars.TF_VAR_project }}"
            echo "- **Application**: ${{ vars.TF_VAR_app }}"
            echo "- **Env**: ${{ vars.TF_VAR_env }}"
            echo "- **Job**: ${{ github.job }}"
            echo "- **Status**: ${{ job.status }}"
            echo "- **Branch**: ${{ github.ref }}"
            echo "- **Commit**: ${{ github.sha }}"
            echo ""
            echo "[View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Send failure notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "✉️ ${{ vars.TF_VAR_project}} ${{ vars.TF_VAR_app}} (${{ vars.TF_VAR_env}}): ${{ github.job }} ${{ job.status }}"
          to: ${{ secrets.EMAIL_USERNAME }}
          from: ${{ secrets.EMAIL_USERNAME }}
          html_body: |
            <h2>GitHub Actions CI/CD Notification</h2>
            <p><b>Project</b>: ${{ vars.TF_VAR_project}}</p>
            <p><b>Application</b>: ${{ vars.TF_VAR_app}}</p>
            <p><b>Repository</b>: ${{ github.repository }}</p>
            <p><b>Env</b>: ${{ vars.TF_VAR_env }}</p>
            <p><b>Job</b>: ${{ github.job }}</p>
            <p><b>Status</b>: ${{ job.status }}</p>
            <p><b>Branch</b>: ${{ github.ref }}</p>
            <p><b>Workflow</b>: ${{ github.workflow }}</p>
            <p><b>Commit</b>: ${{ github.sha }}</p>
            <p><a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Workflow Run</a></p>
