name: prod-cd

on:
  push:
    branches:
      - master
    # paths:
    #   - "src/aws/**"

permissions:
  contents: read
  id-token: write

concurrency:
  group: prod-cd-${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true # Cancel older runs

jobs:
  provision_prod:
    name: Provision Prod
    runs-on: ubuntu-latest
    environment:
      name: Prod
      url: https://docs.github.com/en/actions/deployment/protecting-deployments
    timeout-minutes: 60
    env:
      TF_PLUGIN_CACHE_DIR: /home/runner/.terraform.d/plugin-cache
    defaults:
      run:
        working-directory: ${{ vars.DIR_AWS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.DIR_AWS }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: ${{ vars.TF_VAR_AWS_REGION }}

      - name: Configure Terraform plugin cache
        run: |
          mkdir -pv ~/.terraform.d/plugin-cache
          echo 'plugin_cache_dir = "~/.terraform.d/plugin-cache"' > ~/.terraformrc

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ vars.TF_VERSION }}

      - name: Terraform init - S3 backend
        run: |
          terraform init -reconfigure -input=false \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY }}/${{ vars.TF_VAR_ENV }}/terraform.tfstate" \
            -backend-config="encrypt=true"

      - name: Terraform Validate
        run: |
          terraform fmt -check -recursive -no-color
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -input=false -no-color

      - name: Save plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ vars.DIR_AWS }}/tfplan
          retention-days: 1

      - name: Cache Terraform providers and modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_PLUGIN_CACHE_DIR }}
            ${{ vars.DIR_AWS }}/.terraform/modules
          key: ${{ runner.os }}-tf-${{ vars.TF_VERSION }}-${{ hashFiles(format('{0}/**/.terraform.lock.hcl', vars.DIR_AWS)) }}
          restore-keys: |
            ${{ runner.os }}-tf-${{ vars.TF_VERSION }}-
            ${{ runner.os }}-tf-

      - name: Terraform init - S3 backend
        run: |
          terraform init -reconfigure -input=false \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY }}/${{ vars.TF_VAR_env }}/terraform.tfstate" \
            -backend-config="encrypt=true"

      - name: Terraform apply
        run: terraform apply -auto-approve -input=false -no-color
