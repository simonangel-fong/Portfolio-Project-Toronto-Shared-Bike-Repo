name: Dev CI/CD

on:
  pull_request:
    paths:
      - "module/**"
      - "dev/**"
      - ".github/workflows/**"
  push:
    branches: ["master"]
    paths:
      - "module/**"
      - "dev/**"
      - ".github/workflows/dev_cicd.yaml"
  workflow_dispatch: {}

env:
  TERRAFORM_VERSION: 1.7.5
  TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
  TF_WORKING_DIR: dev
  TF_VAR_aws_region: ${{ vars.AWS_REGION }}
  TF_VAR_vpc_cidr: ${{ vars.VPC_CIDR }}

permissions:
  id-token: write
  contents: read

jobs:
  validate_and_plan:
    name: Validate & Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: ${{ env.TF_VAR_aws_region }}

      - name: Cache .terraform
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ${{ env.TF_WORKING_DIR }}/.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-tf-

      - name: Terraform init (S3 backend)
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY }}" \
            -backend-config="encrypt=true"

      - name: Terraform fmt
        run: terraform fmt -check -recursive -no-color

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        run: terraform plan -out=tfplan -input=false -no-color

      - name: Save plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}/tfplan

  apply:
    name: Apply (master only, with approval)
    needs: validate_and_plan
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_TF_ROLE_ARN }}
          aws-region: ${{ env.TF_VAR_aws_region }}

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}

      - name: Terraform init (S3 backend)
        run: |
          terraform init -reconfigure -input=false \
            -backend-config="bucket=${{ secrets.AWS_BACKEND_BUCKET }}" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="key=${{ secrets.AWS_BACKEND_BUCKET_KEY }}" \
            -backend-config="encrypt=true"

      - name: Terraform apply
        run: terraform apply -auto-approve tfplan -input=false -no-color
