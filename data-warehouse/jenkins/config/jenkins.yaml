jenkins:
  systemMessage: "Project Toronto Shared Bike - Jenkins Dashboard"

  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false

  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "${JENKINS_ADMIN_NAME}"
          password: "${JENKINS_ADMIN_PWD}"
        - id: "admin"
          password: "admin"
          properties:
          - timezone:
              timeZoneName: "Canada/Eastern"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true

credentials:
  system:
    domainCredentials:
    - credentials:
      - aws:
          accessKey: "${AWS_ACCESS_KEY}"
          id: "aws_cred"
          scope: GLOBAL
          secretKey: "${AWS_SECRET_KEY}"
      - usernamePassword:
          id: "gmail_cred"
          password: "${GMAIL_PWD}"
          scope: GLOBAL
          username: "${GMAIL_USERNAME}"
          usernameSecret: true
      - string:
          id: "postgres_user"
          scope: GLOBAL
          secret: "${POSTGRES_USER}"
      # - string:
      #     id: "postgres_db"
      #     scope: GLOBAL
      #     secret: "${POSTGRES_DB}"
      - string:
          id: "postgres_password"
          scope: GLOBAL
          secret: "${POSTGRES_PWD}"

tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"

unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  location:
    adminAddress: "${GMAIL_USERNAME}"
    url: "https://onprem.arguswatcher.net/jenkins/"
  email-ext:
    mailAccount:
      credentialsId: "gmail_cred"
      smtpHost: "smtp.gmail.com"
      smtpPort: "465"
      useSsl: true
  mailer:
    authentication:
      password: "${GMAIL_PWD}"
      username: "${GMAIL_USERNAME}"
    charset: "UTF-8"
    smtpHost: "smtp.gmail.com"
    smtpPort: "465"
    useSsl: true
    useTls: false
  globalTimeOutConfiguration:
    operations:
    - "failOperation"
    overwriteable: false
    strategy:
      absoluteTimeOutStrategy:
        timeoutMinutes: "60"

jobs:
  - script: >
      pipelineJob('etl-pipeline-dev-push') {
        definition {
          cpsScm {
            scm {
              git {
                remote {
                  url('https://github.com/simonangel-fong/Portfolio-Project-Toronto-Shared-Bike-Repo.git')
                }
                branch('feature-dw-dev')
              }
            }
            triggers {
              githubPush()
            }
            scriptPath("data-warehouse/jenkins/pipeline/Jenkinsfile")
            lightweight()
          }
        }
      }

  - script: >
      pipelineJob('etl-pipeline-prod-daily') {
        definition {
          cpsScm {
            scm {
              git {
                remote {
                  url('https://github.com/simonangel-fong/Portfolio-Project-Toronto-Shared-Bike-Repo.git')
                }
                branch('master')
              }
            }
            triggers {
              githubPush()
              cron('H 13 * * *')
            }
            scriptPath("data-warehouse/jenkins/pipeline/Jenkinsfile")
            lightweight()
          }
        }
      }
